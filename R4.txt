from machine import Pin
import time
import xbee
import sys

TARGET_NODE_ID = "XISCUA_COORD"
# Direccion del coordinador
DIRECCION = b'\x00\x13\xa2\x00A\x8d\x0b\xb6'

val1 = Pin("D1", Pin.OUT, value=0)
val2 = Pin("D8", Pin.OUT, value=0)
val3 = Pin("D12", Pin.OUT, value=0)
val4 = Pin("D4", Pin.OUT, value=0)
ox5 = Pin("D7", Pin.OUT, value=0)
while True:
    print("Waiting for data...\n")

    while True:
        # Check if the XBee has any message in the queue.
        received_msg = xbee.receive()
        if received_msg:
            payload = received_msg['payload']
            mensaje = payload.decode()
            print(mensaje)
            trama = mensaje.split("_")
            if trama[0] == "R4":
                time.sleep(10)
                if trama[1] == "SPH":
                    val1.value(1)
                    duracion = int(trama[2])
                    # duracion prendido
                    time.sleep(duracion)
                    val1.value(0)
                    try:
                        # Some protocols do not have 16-bit address. In those cases, use the 64-bit one.
                        xbee.transmit(DIRECCION, "R4_OK_SPH")
                        print("Dato enviado")
                    except Exception as e:
                        print("Error de transmision: %s" % str(e))

                if trama[1] == "BPH":
                    val2.value(1)
                    duracion = int(trama[2])
                    # duracion prendido
                    time.sleep(duracion)
                    val2.value(0)
                    try:
                        # Some protocols do not have 16-bit address. In those cases, use the 64-bit one.
                        xbee.transmit(DIRECCION, "R4_OK_BPH")
                        print("Dato enviado")
                    except Exception as e:
                        print("Error de transmision: %s" % str(e))

                if trama[1] == "SCE":
                    val3.value(1)
                    duracion = int(trama[2])
                    # duracion prendido
                    time.sleep(duracion)
                    val3.value(0)
                    try:
                        # Some protocols do not have 16-bit address. In those cases, use the 64-bit one.
                        xbee.transmit(DIRECCION, "R4_OK_SCE")
                        print("Dato enviado")
                    except Exception as e:
                        print("Error de transmision: %s" % str(e))

                if trama[1] == "BCE":
                    val4.value(1)
                    duracion = int(trama[2])
                    # duracion prendido
                    time.sleep(duracion)
                    val4.value(0)
                    try:
                        # Some protocols do not have 16-bit address. In those cases, use the 64-bit one.
                        xbee.transmit(DIRECCION, "R4_OK_BCE")
                        print("Dato enviado")
                    except Exception as e:
                        print("Error de transmision: %s" % str(e))
                if trama[1] == "OX":
                    ox5.value(1)
                    duracion = int(trama[2])
                    # duracion prendido
                    time.sleep(duracion)
                    ox5.value(0)
                    try:
                        # Some protocols do not have 16-bit address. In those cases, use the 64-bit one.
                        xbee.transmit(DIRECCION, "R4_OK_OX")
                        print("Dato enviado")
                    except Exception as e:
                        print("Error de transmision: %s" % str(e))

                if trama[1] == "ESTADO":
                    x = xbee.XBee()
                    estado = "ESTADO_R4_" + str(x.atcmd('VR')) + "_" + str(x.atcmd('%V')) + "_" + str(
                        x.atcmd('TP')) + "_OK"
                    print(estado)
                    try:
                        # Some protocols do not have 16-bit address. In those cases, use the 64-bit one.
                        xbee.transmit(DIRECCION, estado)
                        print("Dato enviado")
                    except Exception as e:
                        print("Error de transmision: %s" % str(e))

                if trama[1] == "SLEEP":
                    tiempo = int(trama[2])*60000
                    x = xbee.XBee().sleep_now(tiempo, True)

                if trama[1] == "RESET":
                    x = xbee.XBee()
                    try:
                        # Some protocols do not have 16-bit address. In those cases, use the 64-bit one.
                        xbee.transmit(DIRECCION, "RESET_R4_OK")
                        print("RESET_R4_OK")
                    except Exception as e:
                        print("Error de transmision: %s" % str(e))

                    x.atcmd('FR')